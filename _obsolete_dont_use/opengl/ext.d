/*
Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/
module iv.opengl.ext;

import iv.opengl.gl;

enum : uint {
  // GL_EXT_texture_filter_anisotropic
  GL_TEXTURE_MAX_ANISOTROPY_EXT       = 0x84FE,
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT   = 0x84FF,

  // GL_EXT_framebuffer_object
  GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506,
  GL_MAX_RENDERBUFFER_SIZE_EXT        = 0x84E8,
  GL_FRAMEBUFFER_BINDING_EXT          = 0x8CA6,
  GL_RENDERBUFFER_BINDING_EXT         = 0x8CA7,
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0,
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1,
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2,
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3,
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4,
  GL_FRAMEBUFFER_COMPLETE_EXT         = 0x8CD5,
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6,
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7,
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9,
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA,
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB,
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC,
  GL_FRAMEBUFFER_UNSUPPORTED_EXT      = 0x8CDD,
  GL_MAX_COLOR_ATTACHMENTS_EXT        = 0x8CDF,
  GL_COLOR_ATTACHMENT0_EXT            = 0x8CE0,
  GL_COLOR_ATTACHMENT1_EXT            = 0x8CE1,
  GL_COLOR_ATTACHMENT2_EXT            = 0x8CE2,
  GL_COLOR_ATTACHMENT3_EXT            = 0x8CE3,
  GL_COLOR_ATTACHMENT4_EXT            = 0x8CE4,
  GL_COLOR_ATTACHMENT5_EXT            = 0x8CE5,
  GL_COLOR_ATTACHMENT6_EXT            = 0x8CE6,
  GL_COLOR_ATTACHMENT7_EXT            = 0x8CE7,
  GL_COLOR_ATTACHMENT8_EXT            = 0x8CE8,
  GL_COLOR_ATTACHMENT9_EXT            = 0x8CE9,
  GL_COLOR_ATTACHMENT10_EXT           = 0x8CEA,
  GL_COLOR_ATTACHMENT11_EXT           = 0x8CEB,
  GL_COLOR_ATTACHMENT12_EXT           = 0x8CEC,
  GL_COLOR_ATTACHMENT13_EXT           = 0x8CED,
  GL_COLOR_ATTACHMENT14_EXT           = 0x8CEE,
  GL_COLOR_ATTACHMENT15_EXT           = 0x8CEF,
  GL_DEPTH_ATTACHMENT_EXT             = 0x8D00,
  GL_STENCIL_ATTACHMENT_EXT           = 0x8D20,
  GL_FRAMEBUFFER_EXT                  = 0x8D40,
  GL_RENDERBUFFER_EXT                 = 0x8D41,
  GL_RENDERBUFFER_WIDTH_EXT           = 0x8D42,
  GL_RENDERBUFFER_HEIGHT_EXT          = 0x8D43,
  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44,
  GL_STENCIL_INDEX1_EXT               = 0x8D46,
  GL_STENCIL_INDEX4_EXT               = 0x8D47,
  GL_STENCIL_INDEX8_EXT               = 0x8D48,
  GL_STENCIL_INDEX16_EXT              = 0x8D49,
  GL_RENDERBUFFER_RED_SIZE_EXT        = 0x8D50,
  GL_RENDERBUFFER_GREEN_SIZE_EXT      = 0x8D51,
  GL_RENDERBUFFER_BLUE_SIZE_EXT       = 0x8D52,
  GL_RENDERBUFFER_ALPHA_SIZE_EXT      = 0x8D53,
  GL_RENDERBUFFER_DEPTH_SIZE_EXT      = 0x8D54,
  GL_RENDERBUFFER_STENCIL_SIZE_EXT    = 0x8D55,

  // GL_NV_explicit_multisample
  GL_SAMPLE_POSITION_NV               = 0x8E50,
  GL_SAMPLE_MASK_NV                   = 0x8E51,
  GL_SAMPLE_MASK_VALUE_NV             = 0x8E52,
  GL_TEXTURE_BINDING_RENDERBUFFER_NV  = 0x8E53,
  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54,
  GL_MAX_SAMPLE_MASK_WORDS_NV         = 0x8E59,
  GL_TEXTURE_RENDERBUFFER_NV          = 0x8E55,
  GL_SAMPLER_RENDERBUFFER_NV          = 0x8E56,
  GL_INT_SAMPLER_RENDERBUFFER_NV      = 0x8E57,
  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58,

  // GL_EXT_direct_state_access
  GL_PROGRAM_MATRIX_EXT               = 0x8E2D,
  GL_TRANSPOSE_PROGRAM_MATRIX_EXT     = 0x8E2E,
  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT   = 0x8E2F,

  // GL_EXT_geometry_shader4
  GL_GEOMETRY_SHADER_EXT              = 0x8DD9,
  GL_GEOMETRY_VERTICES_OUT_EXT        = 0x8DDA,
  GL_GEOMETRY_INPUT_TYPE_EXT          = 0x8DDB,
  GL_GEOMETRY_OUTPUT_TYPE_EXT         = 0x8DDC,
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29,
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD,
  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE,
  GL_MAX_VARYING_COMPONENTS_EXT        = 0x8B4B,
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF,
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT  = 0x8DE0,
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1,
  GL_LINES_ADJACENCY_EXT               = 0xA,
  GL_LINE_STRIP_ADJACENCY_EXT          = 0xB,
  GL_TRIANGLES_ADJACENCY_EXT           = 0xC,
  GL_TRIANGLE_STRIP_ADJACENCY_EXT      = 0xD,
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8,
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9,
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7,
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4,
  GL_PROGRAM_POINT_SIZE_EXT            = 0x8642,

  // GL_NV_framebuffer_multisample_coverage
  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV  = 0x8CAB,
  GL_RENDERBUFFER_COLOR_SAMPLES_NV     = 0x8E10,
  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11,
  GL_MULTISAMPLE_COVERAGE_MODES_NV     = 0x8E12,

  // GL_NV_gpu_program4
  GL_MIN_PROGRAM_TEXEL_OFFSET_EXT      = 0x8904,
  GL_MAX_PROGRAM_TEXEL_OFFSET_EXT      = 0x8905,
  GL_PROGRAM_ATTRIB_COMPONENTS_NV      = 0x8906,
  GL_PROGRAM_RESULT_COMPONENTS_NV      = 0x8907,
  GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV  = 0x8908,
  GL_MAX_PROGRAM_RESULT_COMPONENTS_NV  = 0x8909,
  GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV    = 0x8DA5,
  GL_MAX_PROGRAM_GENERIC_RESULTS_NV    = 0x8DA6,

  // GL_EXT_gpu_shader4
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT   = 0x88FD,
  GL_SAMPLER_1D_ARRAY_EXT              = 0x8DC0,
  GL_SAMPLER_2D_ARRAY_EXT              = 0x8DC1,
  GL_SAMPLER_BUFFER_EXT                = 0x8DC2,
  GL_SAMPLER_1D_ARRAY_SHADOW_EXT       = 0x8DC3,
  GL_SAMPLER_2D_ARRAY_SHADOW_EXT       = 0x8DC4,
  GL_SAMPLER_CUBE_SHADOW_EXT           = 0x8DC5,
  GL_UNSIGNED_INT_VEC2_EXT             = 0x8DC6,
  GL_UNSIGNED_INT_VEC3_EXT             = 0x8DC7,
  GL_UNSIGNED_INT_VEC4_EXT             = 0x8DC8,
  GL_INT_SAMPLER_1D_EXT                = 0x8DC9,
  GL_INT_SAMPLER_2D_EXT                = 0x8DCA,
  GL_INT_SAMPLER_3D_EXT                = 0x8DCB,
  GL_INT_SAMPLER_CUBE_EXT              = 0x8DCC,
  GL_INT_SAMPLER_2D_RECT_EXT           = 0x8DCD,
  GL_INT_SAMPLER_1D_ARRAY_EXT          = 0x8DCE,
  GL_INT_SAMPLER_2D_ARRAY_EXT          = 0x8DCF,
  GL_INT_SAMPLER_BUFFER_EXT            = 0x8DD0,
  GL_UNSIGNED_INT_SAMPLER_1D_EXT       = 0x8DD1,
  GL_UNSIGNED_INT_SAMPLER_2D_EXT       = 0x8DD2,
  GL_UNSIGNED_INT_SAMPLER_3D_EXT       = 0x8DD3,
  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT     = 0x8DD4,
  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT  = 0x8DD5,
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6,
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7,
  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT   = 0x8DD8,

  // GL_EXT_texture_integer
  GL_RGBA_INTEGER_MODE_EXT             = 0x8D9E,
  GL_RGBA32UI_EXT                      = 0x8D70,
  GL_RGB32UI_EXT                       = 0x8D71,
  GL_ALPHA32UI_EXT                     = 0x8D72,
  GL_INTENSITY32UI_EXT                 = 0x8D73,
  GL_LUMINANCE32UI_EXT                 = 0x8D74,
  GL_LUMINANCE_ALPHA32UI_EXT           = 0x8D75,
  GL_RGBA16UI_EXT                      = 0x8D76,
  GL_RGB16UI_EXT                       = 0x8D77,
  GL_ALPHA16UI_EXT                     = 0x8D78,
  GL_INTENSITY16UI_EXT                 = 0x8D79,
  GL_LUMINANCE16UI_EXT                 = 0x8D7A,
  GL_LUMINANCE_ALPHA16UI_EXT           = 0x8D7B,
  GL_RGBA8UI_EXT                       = 0x8D7C,
  GL_RGB8UI_EXT                        = 0x8D7D,
  GL_ALPHA8UI_EXT                      = 0x8D7E,
  GL_INTENSITY8UI_EXT                  = 0x8D7F,
  GL_LUMINANCE8UI_EXT                  = 0x8D80,
  GL_LUMINANCE_ALPHA8UI_EXT            = 0x8D81,
  GL_RGBA32I_EXT                       = 0x8D82,
  GL_RGB32I_EXT                        = 0x8D83,
  GL_ALPHA32I_EXT                      = 0x8D84,
  GL_INTENSITY32I_EXT                  = 0x8D85,
  GL_LUMINANCE32I_EXT                  = 0x8D86,
  GL_LUMINANCE_ALPHA32I_EXT            = 0x8D87,
  GL_RGBA16I_EXT                       = 0x8D88,
  GL_RGB16I_EXT                        = 0x8D89,
  GL_ALPHA16I_EXT                      = 0x8D8A,
  GL_INTENSITY16I_EXT                  = 0x8D8B,
  GL_LUMINANCE16I_EXT                  = 0x8D8C,
  GL_LUMINANCE_ALPHA16I_EXT            = 0x8D8D,
  GL_RGBA8I_EXT                        = 0x8D8E,
  GL_RGB8I_EXT                         = 0x8D8F,
  GL_ALPHA8I_EXT                       = 0x8D90,
  GL_INTENSITY8I_EXT                   = 0x8D91,
  GL_LUMINANCE8I_EXT                   = 0x8D92,
  GL_LUMINANCE_ALPHA8I_EXT             = 0x8D93,
  GL_RED_INTEGER_EXT                   = 0x8D94,
  GL_GREEN_INTEGER_EXT                 = 0x8D95,
  GL_BLUE_INTEGER_EXT                  = 0x8D96,
  GL_ALPHA_INTEGER_EXT                 = 0x8D97,
  GL_RGB_INTEGER_EXT                   = 0x8D98,
  GL_RGBA_INTEGER_EXT                  = 0x8D99,
  GL_BGR_INTEGER_EXT                   = 0x8D9A,
  GL_BGRA_INTEGER_EXT                  = 0x8D9B,
  GL_LUMINANCE_INTEGER_EXT             = 0x8D9C,
  GL_LUMINANCE_ALPHA_INTEGER_EXT       = 0x8D9D,

  // GL_EXT_texture_buffer_object
  GL_TEXTURE_BUFFER_EXT                = 0x8C2A,
  GL_MAX_TEXTURE_BUFFER_SIZE_EXT       = 0x8C2B,
  GL_TEXTURE_BINDING_BUFFER_EXT        = 0x8C2C,
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D,
  GL_TEXTURE_BUFFER_FORMAT_EXT         = 0x8C2E,


  // GL_EXT_texture_compression_s3tc
  GL_COMPRESSED_RGB_S3TC_DXT1_EXT      = 0x83F0,
  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT     = 0x83F1,
  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT     = 0x83F2,
  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT     = 0x83F3,

  // GL_EXT_texture_compression_rgtc
  GL_COMPRESSED_RED_RGTC1_EXT          = 0x8DBB,
  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT   = 0x8DBC,
  GL_COMPRESSED_RED_GREEN_RGTC2_EXT    = 0x8DBD,
  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE,

  // GL_APPLE_vertex_array_object
  GL_VERTEX_ARRAY_BINDING_APPLE        = 0x85B5,
}

// GL_EXT_texture_filter_anisotropic
private __gshared bool _EXT_texture_filter_anisotropic;
@nogc bool EXT_texture_filter_anisotropic() nothrow @property { return _EXT_texture_filter_anisotropic; }

// GL_EXT_framebuffer_object
extern(System) @nogc nothrow {
  GLboolean glIsRenderbufferEXT (GLuint);
  void glBindRenderbufferEXT (GLenum, GLuint);
  void glDeleteRenderbuffersEXT (GLsizei, in GLuint*);
  void glGenRenderbuffersEXT (GLsizei, GLuint*);
  void glRenderbufferStorageEXT (GLenum, GLenum, GLsizei, GLsizei);
  void glGetRenderbufferParameterivEXT (GLenum, GLenum, GLint*);
  GLboolean glIsFramebufferEXT (GLuint);
  void glBindFramebufferEXT (GLenum, GLuint);
  void glDeleteFramebuffersEXT (GLsizei, in GLuint*);
  void glGenFramebuffersEXT (GLsizei, GLuint*);
  GLenum glCheckFramebufferStatusEXT (GLenum);
  void glFramebufferTexture1DEXT (GLenum, GLenum, GLenum, GLuint, GLint);
  void glFramebufferTexture2DEXT (GLenum, GLenum, GLenum, GLuint, GLint);
  void glFramebufferTexture3DEXT (GLenum, GLenum, GLenum, GLuint, GLint, GLint);
  void glFramebufferRenderbufferEXT (GLenum, GLenum, GLenum, GLuint);
  void glGetFramebufferAttachmentParameterivEXT (GLenum, GLenum, GLenum, GLint*);
  void glGenerateMipmapEXT (GLenum);
}

// GL_EXT_draw_buffers2
extern(System) @nogc nothrow {
  void glColorMaskIndexedEXT (uint buf, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
  void glGetBooleanIndexedvEXT (GLenum value, uint index, GLboolean *data);
  void glGetIntegerIndexedvEXT (GLenum value, uint index, int *data);
  void glEnableIndexedEXT (GLenum target, uint index);
  void glDisableIndexedEXT (GLenum target, uint index);
  GLboolean glIsEnabledIndexedEXT (GLenum target, uint index);
}

// GL_NV_explicit_multisample
extern(System) @nogc nothrow {
  void glGetMultisamplefvNV (GLenum pname, uint index, float *val);
  void glSampleMaskIndexedNV (GLuint index, GLbitfield mask);
  void glTexRenderbufferNV (GLenum target, uint renderbuffer);
}

// GL_EXT_geometry_shader4
extern(System) @nogc nothrow {
  void glProgramParameteriEXT (uint program, GLenum pname, int value);
  void glFramebufferTextureEXT (GLenum target, GLenum attachment, uint texture, int level);
  void glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, uint texture, int level, int layer);
  void glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, uint texture, int level, GLenum face);
}

// GL_NV_framebuffer_multisample_coverage
extern(System) @nogc nothrow {
  void glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
}

// GL_NV_gpu_program4
extern(System) @nogc nothrow {
  void glProgramLocalParameterI4iNV (GLenum target, uint index, int x, int y, int z, int w);
  void glProgramLocalParameterI4ivNV (GLenum target, uint index, const int *params);
  void glProgramLocalParametersI4ivNV (GLenum target, uint index, GLsizei count, const int *params);
  void glProgramLocalParameterI4uiNV (GLenum target, uint index, uint x, uint y, uint z, uint w);
  void glProgramLocalParameterI4uivNV (GLenum target, uint index, const uint *params);
  void glProgramLocalParametersI4uivNV (GLenum target, uint index, GLsizei count, const uint *params);
  void glProgramEnvParameterI4iNV (GLenum target, uint index, int x, int y, int z, int w);
  void glProgramEnvParameterI4ivNV (GLenum target, uint index, const int *params);
  void glProgramEnvParametersI4ivNV (GLenum target, uint index, GLsizei count, const int *params);
  void glProgramEnvParameterI4uiNV (GLenum target, uint index, uint x, uint y, uint z, uint w);
  void glProgramEnvParameterI4uivNV (GLenum target, uint index, const uint *params);
  void glProgramEnvParametersI4uivNV (GLenum target, uint index, GLsizei count, const uint *params);
  void glGetProgramLocalParameterIivNV (GLenum target, uint index, int *params);
  void glGetProgramLocalParameterIuivNV (GLenum target, uint index, uint *params);
  void glGetProgramEnvParameterIivNV (GLenum target, uint index, int *params);
  void glGetProgramEnvParameterIuivNV (GLenum target, uint index, uint *params);
}

// GL_EXT_gpu_program_parameters
extern(System) @nogc nothrow {
  void glProgramEnvParameters4fvEXT (GLenum target, uint index, GLsizei count, const float *params);
  void glProgramLocalParameters4fvEXT (GLenum target, uint index, GLsizei count, const float *params);
}

// GL_EXT_gpu_shader4
extern(System) @nogc nothrow {
  void glVertexAttribI1iEXT (uint index, int x);
  void glVertexAttribI2iEXT (uint index, int x, int y);
  void glVertexAttribI3iEXT (uint index, int x, int y, int z);
  void glVertexAttribI4iEXT (uint index, int x, int y, int z, int w);
  void glVertexAttribI1uiEXT (uint index, uint x);
  void glVertexAttribI2uiEXT (uint index, uint x, uint y);
  void glVertexAttribI3uiEXT (uint index, uint x, uint y, uint z);
  void glVertexAttribI4uiEXT (uint index, uint x, uint y, uint z, uint w);
  void glVertexAttribI1ivEXT (uint index, const int *v);
  void glVertexAttribI2ivEXT (uint index, const int *v);
  void glVertexAttribI3ivEXT (uint index, const int *v);
  void glVertexAttribI4ivEXT (uint index, const int *v);
  void glVertexAttribI1uivEXT (uint index, const uint *v);
  void glVertexAttribI2uivEXT (uint index, const uint *v);
  void glVertexAttribI3uivEXT (uint index, const uint *v);
  void glVertexAttribI4uivEXT (uint index, const uint *v);
  void glVertexAttribI4bvEXT (uint index, const byte *v);
  void glVertexAttribI4svEXT (uint index, const short *v);
  void glVertexAttribI4ubvEXT (uint index, const ubyte *v);
  void glVertexAttribI4usvEXT (uint index, const ushort *v);
  void glVertexAttribIPointerEXT (uint index, int size, GLenum type, GLsizei stride, const void *pointer);
  void glGetVertexAttribIivEXT (uint index, GLenum pname, int *params);
  void glGetVertexAttribIuivEXT (uint index, GLenum pname, uint *params);
  void glUniform1uiEXT (int location, uint v0);
  void glUniform2uiEXT (int location, uint v0, uint v1);
  void glUniform3uiEXT (int location, uint v0, uint v1, uint v2);
  void glUniform4uiEXT (int location, uint v0, uint v1, uint v2, uint v3);
  void glUniform1uivEXT (int location, GLsizei count, const uint *value);
  void glUniform2uivEXT (int location, GLsizei count, const uint *value);
  void glUniform3uivEXT (int location, GLsizei count, const uint *value);
  void glUniform4uivEXT (int location, GLsizei count, const uint *value);
  void glGetUniformuivEXT (uint program, int location, uint *params);
  void glBindFragDataLocationEXT (uint program, uint colorNumber, const char *name);
  int glGetFragDataLocationEXT (uint program, const char *name);
}

// GL_EXT_texture_integer
extern(System) @nogc nothrow {
  void glClearColorIiEXT (int r, int g, int b, int a);
  void glClearColorIuiEXT (uint r, uint g, uint b, uint a);
  void glTexParameterIivEXT (GLenum target, GLenum pname, int *params);
  void glTexParameterIuivEXT (GLenum target, GLenum pname, uint *params);
  void glGetTexParameterIivEXT (GLenum target, GLenum pname, int *params);
  void glGetTexParameterIuivEXT (GLenum target, GLenum pname, uint *params);
}

// GL_EXT_texture_buffer_object
extern(System) @nogc nothrow {
  void glTexBufferEXT (GLenum target, GLenum internalformat, uint buffer);
}

// GL_EXT_direct_state_access
extern(System) @nogc nothrow {
  void glClientAttribDefaultEXT (GLbitfield mask);
  void glPushClientAttribDefaultEXT (GLbitfield mask);

  void glMatrixLoadfEXT (GLenum matrixMode, const float *m);
  void glMatrixLoaddEXT (GLenum matrixMode, const double *m);
  void glMatrixMultfEXT (GLenum matrixMode, const float *m);
  void glMatrixMultdEXT (GLenum matrixMode, const double *m);
  void glMatrixLoadIdentityEXT (GLenum matrixMode);
  void glMatrixRotatefEXT (GLenum matrixMode, float angle, float x, float y, float z);
  void glMatrixRotatedEXT (GLenum matrixMode, double angle, double x, double y, double z);
  void glMatrixScalefEXT (GLenum matrixMode, float x, float y, float z);
  void glMatrixScaledEXT (GLenum matrixMode, double x, double y, double z);
  void glMatrixTranslatefEXT (GLenum matrixMode, float x, float y, float z);
  void glMatrixTranslatedEXT (GLenum matrixMode, double x, double y, double z);
  void glMatrixOrthoEXT (GLenum matrixMode, double l, double r, double b, double t, double n, double f);
  void glMatrixFrustumEXT (GLenum matrixMode, double l, double r, double b, double t, double n, double f);
  void glMatrixPushEXT (GLenum matrixMode);
  void glMatrixPopEXT (GLenum matrixMode);

  void glTextureParameteriEXT (uint texture, GLenum target, GLenum pname, int param);
  void glTextureParameterivEXT (uint texture, GLenum target, GLenum pname, const int *param);
  void glTextureParameterfEXT (uint texture, GLenum target, GLenum pname, float param);
  void glTextureParameterfvEXT (uint texture, GLenum target, GLenum pname, const float *param);
  void glTextureImage1DEXT (uint texture, GLenum target, int level, int internalformat, GLsizei width, int border, GLenum format, GLenum type, const void *pixels);
  void glTextureImage2DEXT (uint texture, GLenum target, int level, int internalformat, GLsizei width, GLsizei height, int border, GLenum format, GLenum type, const void *pixels);
  void glTextureSubImage1DEXT (uint texture, GLenum target, int level, int xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
  void glTextureSubImage2DEXT (uint texture, GLenum target, int level, int xoffset, int yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
  void glCopyTextureImage1DEXT (uint texture, GLenum target, int level, GLenum internalformat, int x, int y, GLsizei width, int border);
  void glCopyTextureImage2DEXT (uint texture, GLenum target, int level, GLenum internalformat, int x, int y, GLsizei width, GLsizei height, int border);
  void glCopyTextureSubImage1DEXT (uint texture, GLenum target, int level, int xoffset, int x, int y, GLsizei width);
  void glCopyTextureSubImage2DEXT (uint texture, GLenum target, int level, int xoffset, int yoffset, int x, int y, GLsizei width, GLsizei height);
  void glGetTextureImageEXT (uint texture, GLenum target, int level, GLenum format, GLenum type, void *pixels);
  void glGetTextureParameterfvEXT (uint texture, GLenum target, GLenum pname, float *params);
  void glGetTextureParameterivEXT (uint texture, GLenum target, GLenum pname, int *params);
  void glGetTextureLevelParameterfvEXT (uint texture, GLenum target, int level, GLenum pname, float *params);
  void glGetTextureLevelParameterivEXT (uint texture, GLenum target, int level, GLenum pname, int *params);

  void glTextureImage3DEXT (uint texture, GLenum target, int level, int internalformat, GLsizei width, GLsizei height, GLsizei depth, int border, GLenum format, GLenum type, const void *pixels);
  void glTextureSubImage3DEXT (uint texture, GLenum target, int level, int xoffset, int yoffset, int zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
  void glCopyTextureSubImage3DEXT (uint texture, GLenum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, GLsizei width, GLsizei height);

  void glBindMultiTextureEXT (GLenum texunit, GLenum target, uint texture);
  void glMultiTexCoordPointerEXT (GLenum texunit, int size, GLenum type, GLsizei stride, const void *pointer);
  void glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, float param);
  void glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const float *params);
  void glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, int param);
  void glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const int *params);
  void glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, double param);
  void glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const double *params);
  void glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, float param);
  void glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const float *params);
  void glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, int param);
  void glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const int *params);
  void glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, float *params);
  void glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, int *params);
  void glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, double *params);
  void glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, float *params);
  void glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, int *params);
  void glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, int param);
  void glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const int *param);
  void glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, float param);
  void glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const float *param);
  void glMultiTexImage1DEXT (GLenum texunit, GLenum target, int level, int internalformat, GLsizei width, int border, GLenum format, GLenum type, const void *pixels);
  void glMultiTexImage2DEXT (GLenum texunit, GLenum target, int level, int internalformat, GLsizei width, GLsizei height, int border, GLenum format, GLenum type, const void *pixels);
  void glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, int level, int xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
  void glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, int level, int xoffset, int yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
  void glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, int level, GLenum internalformat, int x, int y, GLsizei width, int border);
  void glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, int level, GLenum internalformat, int x, int y, GLsizei width, GLsizei height, int border);
  void glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, int level, int xoffset, int x, int y, GLsizei width);
  void glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, int level, int xoffset, int yoffset, int x, int y, GLsizei width, GLsizei height);
  void glGetMultiTexImageEXT (GLenum texunit, GLenum target, int level, GLenum format, GLenum type, void *pixels);
  void glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, float *params);
  void glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, int *params);
  void glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, int level, GLenum pname, float *params);
  void glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, int level, GLenum pname, int *params);
  void glMultiTexImage3DEXT (GLenum texunit, GLenum target, int level, int internalformat, GLsizei width, GLsizei height, GLsizei depth, int border, GLenum format, GLenum type, const void *pixels);
  void glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, int level, int xoffset, int yoffset, int zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
  void glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, int level, int xoffset, int yoffset, int zoffset, int x, int y, GLsizei width, GLsizei height);

  void glEnableClientStateIndexedEXT (GLenum array, uint index);
  void glDisableClientStateIndexedEXT (GLenum array, uint index);

  void glEnableClientStateiEXT (GLenum array, uint index);
  void glDisableClientStateiEXT (GLenum array, uint index);

  void glGetFloatIndexedvEXT (GLenum target, uint index, float *params);
  void glGetDoubleIndexedvEXT (GLenum target, uint index, double *params);
  void glGetPointerIndexedvEXT (GLenum target, uint index, void **params);

  void glGetFloati_vEXT (GLenum pname, uint index, float *params);
  void glGetDoublei_vEXT (GLenum pname, uint index, double *params);
  void glGetPointeri_vEXT (GLenum pname, uint index, void **params);

  void glNamedProgramStringEXT (uint program, GLenum target, GLenum format, GLsizei len, const void *string);
  void glNamedProgramLocalParameter4dEXT (uint program, GLenum target, uint index, double x, double y, double z, double w);
  void glNamedProgramLocalParameter4dvEXT (uint program, GLenum target, uint index, const double *params);
  void glNamedProgramLocalParameter4fEXT (uint program, GLenum target, uint index, float x, float y, float z, float w);
  void glNamedProgramLocalParameter4fvEXT (uint program, GLenum target, uint index, const float *params);
  void glGetNamedProgramLocalParameterdvEXT (uint program, GLenum target, uint index, double *params);
  void glGetNamedProgramLocalParameterfvEXT (uint program, GLenum target, uint index, float *params);
  void glGetNamedProgramivEXT (uint program, GLenum target, GLenum pname, int *params);
  void glGetNamedProgramStringEXT (uint program, GLenum target, GLenum pname, void *string);

  void glCompressedTextureImage3DEXT (uint texture, GLenum target, int level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, int border, GLsizei imageSize, const void *data);
  void glCompressedTextureImage2DEXT (uint texture, GLenum target, int level, GLenum internalformat, GLsizei width, GLsizei height, int border, GLsizei imageSize, const void *data);
  void glCompressedTextureImage1DEXT (uint texture, GLenum target, int level, GLenum internalformat, GLsizei width, int border, GLsizei imageSize, const void *data);
  void glCompressedTextureSubImage3DEXT (uint texture, GLenum target, int level, int xoffset, int yoffset, int zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
  void glCompressedTextureSubImage2DEXT (uint texture, GLenum target, int level, int xoffset, int yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
  void glCompressedTextureSubImage1DEXT (uint texture, GLenum target, int level, int xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
  void glGetCompressedTextureImageEXT (uint texture, GLenum target, int level, void *img);

  void glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, int level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, int border, GLsizei imageSize, const void *data);
  void glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, int level, GLenum internalformat, GLsizei width, GLsizei height, int border, GLsizei imageSize, const void *data);
  void glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, int level, GLenum internalformat, GLsizei width, int border, GLsizei imageSize, const void *data);
  void glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, int level, int xoffset, int yoffset, int zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
  void glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, int level, int xoffset, int yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
  void glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, int level, int xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
  void glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, int level, void *img);

  void glMatrixLoadTransposefEXT (GLenum matrixMode, const float *m);
  void glMatrixLoadTransposedEXT (GLenum matrixMode, const double *m);
  void glMatrixMultTransposefEXT (GLenum matrixMode, const float *m);
  void glMatrixMultTransposedEXT (GLenum matrixMode, const double *m);

  void glNamedBufferDataEXT (uint buffer, GLsizeiptr size, const void *data, GLenum usage);
  void glNamedBufferSubDataEXT (uint buffer, GLintptr offset, GLsizeiptr size, const void *data);
  void* glMapNamedBufferEXT (uint buffer, GLenum access);
  GLboolean glUnmapNamedBufferEXT (uint buffer);
  void glGetNamedBufferParameterivEXT (uint buffer, GLenum pname, int *params);
  void glGetNamedBufferPointervEXT (uint buffer, GLenum pname, void* *params);
  void glGetNamedBufferSubDataEXT (uint buffer, GLintptr offset, GLsizeiptr size, void *data);

  void glProgramUniform1fEXT (uint program, int location, float v0);
  void glProgramUniform2fEXT (uint program, int location, float v0, float v1);
  void glProgramUniform3fEXT (uint program, int location, float v0, float v1, float v2);
  void glProgramUniform4fEXT (uint program, int location, float v0, float v1, float v2, float v3);
  void glProgramUniform1iEXT (uint program, int location, int v0);
  void glProgramUniform2iEXT (uint program, int location, int v0, int v1);
  void glProgramUniform3iEXT (uint program, int location, int v0, int v1, int v2);
  void glProgramUniform4iEXT (uint program, int location, int v0, int v1, int v2, int v3);
  void glProgramUniform1fvEXT (uint program, int location, GLsizei count, const float *value);
  void glProgramUniform2fvEXT (uint program, int location, GLsizei count, const float *value);
  void glProgramUniform3fvEXT (uint program, int location, GLsizei count, const float *value);
  void glProgramUniform4fvEXT (uint program, int location, GLsizei count, const float *value);
  void glProgramUniform1ivEXT (uint program, int location, GLsizei count, const int *value);
  void glProgramUniform2ivEXT (uint program, int location, GLsizei count, const int *value);
  void glProgramUniform3ivEXT (uint program, int location, GLsizei count, const int *value);
  void glProgramUniform4ivEXT (uint program, int location, GLsizei count, const int *value);
  void glProgramUniformMatrix2fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix3fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix4fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);

  void glProgramUniformMatrix2x3fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix3x2fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix2x4fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix4x2fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix3x4fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);
  void glProgramUniformMatrix4x3fvEXT (uint program, int location, GLsizei count, GLboolean transpose, const float *value);

  void glTextureBufferEXT (uint texture, GLenum target, GLenum internalformat, uint buffer);

  void glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, uint buffer);

  void glTextureParameterIivEXT (uint texture, GLenum target, GLenum pname, const int *params);
  void glTextureParameterIuivEXT (uint texture, GLenum target, GLenum pname, const uint *params);
  void glGetTextureParameterIivEXT (uint texture, GLenum target, GLenum pname, int *params);
  void glGetTextureParameterIuivEXT (uint texture, GLenum target, GLenum pname, uint *params);

  void glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const int *params);
  void glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const uint *params);
  void glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, int *params);
  void glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, uint *params);

  void glProgramUniform1uiEXT (uint program, int location, uint v0);
  void glProgramUniform2uiEXT (uint program, int location, uint v0, uint v1);
  void glProgramUniform3uiEXT (uint program, int location, uint v0, uint v1, uint v2);
  void glProgramUniform4uiEXT (uint program, int location, uint v0, uint v1, uint v2, uint v3);
  void glProgramUniform1uivEXT (uint program, int location, GLsizei count, const uint *value);
  void glProgramUniform2uivEXT (uint program, int location, GLsizei count, const uint *value);
  void glProgramUniform3uivEXT (uint program, int location, GLsizei count, const uint *value);
  void glProgramUniform4uivEXT (uint program, int location, GLsizei count, const uint *value);

  void glNamedProgramLocalParameters4fvEXT (uint program, GLenum target, uint index, GLsizei count, const float *params);

  void glNamedProgramLocalParameterI4iEXT (uint program, GLenum target, uint index, int x, int y, int z, int w);
  void glNamedProgramLocalParameterI4ivEXT (uint program, GLenum target, uint index, const int *params);
  void glNamedProgramLocalParametersI4ivEXT (uint program, GLenum target, uint index, GLsizei count, const int *params);
  void glNamedProgramLocalParameterI4uiEXT (uint program, GLenum target, uint index, uint x, uint y, uint z, uint w);
  void glNamedProgramLocalParameterI4uivEXT (uint program, GLenum target, uint index, const uint *params);
  void glNamedProgramLocalParametersI4uivEXT (uint program, GLenum target, uint index, GLsizei count, const uint *params);
  void glGetNamedProgramLocalParameterIivEXT (uint program, GLenum target, uint index, int *params);
  void glGetNamedProgramLocalParameterIuivEXT (uint program, GLenum target, uint index, uint *params);

  void glNamedRenderbufferStorageEXT (uint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
  void glGetNamedRenderbufferParameterivEXT (uint renderbuffer, GLenum pname, int *params);

  void glNamedRenderbufferStorageMultisampleEXT (uint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

  void glNamedRenderbufferStorageMultisampleCoverageEXT (uint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);

  GLenum glCheckNamedFramebufferStatusEXT (uint framebuffer, GLenum target);
  void glNamedFramebufferTexture1DEXT (uint framebuffer, GLenum attachment, GLenum textarget, uint texture, int level);
  void glNamedFramebufferTexture2DEXT (uint framebuffer, GLenum attachment, GLenum textarget, uint texture, int level);
  void glNamedFramebufferTexture3DEXT (uint framebuffer, GLenum attachment, GLenum textarget, uint texture, int level, int zoffset);
  void glNamedFramebufferRenderbufferEXT (uint framebuffer, GLenum attachment, GLenum renderbuffertarget, uint renderbuffer);
  void glGetNamedFramebufferAttachmentParameterivEXT (uint framebuffer, GLenum attachment, GLenum pname, int *params);

  void glGenerateTextureMipmapEXT (uint texture, GLenum target);

  void glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);

  void glFramebufferDrawBufferEXT (uint framebuffer, GLenum mode);
  void glFramebufferDrawBuffersEXT (uint framebuffer, GLsizei n, const GLenum *bufs);
  void glFramebufferReadBufferEXT (uint framebuffer, GLenum mode);

  void glGetFramebufferParameterivEXT (uint framebuffer, GLenum pname, int *param);

  void glNamedCopyBufferSubDataEXT (uint readBuffer, uint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

  void glNamedFramebufferTextureEXT (uint framebuffer, GLenum attachment, uint texture, int level);
  void glNamedFramebufferTextureLayerEXT (uint framebuffer, GLenum attachment, uint texture, int level, int layer);
  void glNamedFramebufferTextureFaceEXT (uint framebuffer, GLenum attachment, uint texture, int level, GLenum face);

  void glTextureRenderbufferEXT (uint texture, GLenum target, uint renderbuffer);

  void glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, uint renderbuffer);

  void glVertexArrayVertexOffsetEXT (uint vaobj, uint buffer, int size, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayColorOffsetEXT (uint vaobj, uint buffer, int size, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayEdgeFlagOffsetEXT (uint vaobj, uint buffer, GLsizei stride, GLintptr offset);
  void glVertexArrayIndexOffsetEXT (uint vaobj, uint buffer, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayNormalOffsetEXT (uint vaobj, uint buffer, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayTexCoordOffsetEXT (uint vaobj, uint buffer, int size, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayMultiTexCoordOffsetEXT (uint vaobj, uint buffer, GLenum texunit, int size, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayFogCoordOffsetEXT (uint vaobj, uint buffer, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArraySecondaryColorOffsetEXT (uint vaobj, uint buffer, int size, GLenum type, GLsizei stride, GLintptr offset);
  void glVertexArrayVertexAttribOffsetEXT (uint vaobj, uint buffer, uint index, int size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
  void glVertexArrayVertexAttribIOffsetEXT (uint vaobj, uint buffer, uint index, int size, GLenum type, GLsizei stride, GLintptr offset);

  void glEnableVertexArrayEXT (uint vaobj, GLenum array);
  void glDisableVertexArrayEXT (uint vaobj, GLenum array);

  void glEnableVertexArrayAttribEXT (uint vaobj, uint index);
  void glDisableVertexArrayAttribEXT (uint vaobj, uint index);

  void glGetVertexArrayIntegervEXT (uint vaobj, GLenum pname, int *param);
  void glGetVertexArrayPointervEXT (uint vaobj, GLenum pname, void **param);
  void glGetVertexArrayIntegeri_vEXT (uint vaobj, uint index, GLenum pname, int *param);
  void glGetVertexArrayPointeri_vEXT (uint vaobj, uint index, GLenum pname, void **param);

  void* glMapNamedBufferRangeEXT (uint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
  void glFlushMappedNamedBufferRangeEXT (uint buffer, GLintptr offset, GLsizeiptr length);
}

// GL_NV_texture_barrier
extern(System) @nogc nothrow {
  void glTextureBarrierNV ();
}
